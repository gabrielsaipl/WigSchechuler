@inject IJSRuntime JS

@if (Type == calendar.Month)
{
    int numberOfDays = 0, increment = 0;
    int[] counter = new int[100];
    int[] identifier = new int[100];
    List<Event> eventStored = new List<Event>();
    <div class="calendar-body">
        @foreach (var week in WeekData)
        {
            int DayOfWeek = 0;
            bool IsFirstDay = true;
            int EventStartWidth = 0;
            int EventEndWidth = 0;
            <div class="week">
                <div class="days">
                    @foreach (var day in week.Days)
                    {
                        <div class="day @day.Class @(day.IsCurrentDay ? "current-day" : "")" @onclick=@(()=>{Op = 1;dayy = day; dayclick();})>
                            @day.DayNumber
                        </div>
                    }
                </div>
                <div class="appointments">

                    @foreach (var day in week.Days)
                    {
                        if (IsFirstDay)
                        {
                            foreach (var e in eventStored)
                            {
                                if (e.EndDate.Date > day.Date)
                                {
                                    EventStartWidth = DayOfWeek;
                                }
                            }
                        }
                        @foreach (var e in eventStored)
                        {
                            for (int i = 0; i < 100; i++)
                            {
                                if (identifier[i] == e.StartDate.Date.Day && counter[i] > 0 && e.StartDate.Date.Day != day.Date.Day)
                                {
                                    counter[i] = counter[i] - 1;
                                    if (IsFirstDay)
                                    {
                                        EventEndWidth = 0;
                                    }
                                    else EventEndWidth += 1;


                                }
                            }
                        }

                        @foreach (var ev in EventData)
                        {
                            bool exists = false;
                            if (ev.StartDate.Date.Day == day.Date.Day && ev.StartDate.Date.Month == day.Date.Month)
                            {
                                //Event with different start and end dates
                                if (ev.StartDate.Date.Day != ev.EndDate.Date.Day)
                                {
                                    TimeSpan duration = ev.EndDate - ev.StartDate;
                                    numberOfDays = duration.Days;
                                    if (numberOfDays > 0 && numberOfDays <= 366)
                                    {
                                        foreach (var e in eventStored)
                                        {
                                            if (e.StartDate == ev.StartDate)
                                            {
                                                exists = true;
                                            }
                                        }
                                        if (!exists)
                                        {
                                            eventStored.Add(ev);
                                            eve = ev;
                                            identifier[increment] = ev.StartDate.Date.Day;
                                            counter[increment] = numberOfDays;
                                            EventStartWidth = DayOfWeek;
                                            EventEndWidth = EventStartWidth;
                                        }

                                    }
                                }
                                //Event With same start and end date
                                else
                                {
                                    @* !!!!  TO DO:START, END AND ORDER USING DINAMIC VALUES, background color depends (orange - to approve, green - approved) !!!! *@
                                    <div class="appointment" style=" --start: 0; --end: 0; --order: 1; background-color: green;" @onclick:stopPropagation="true" @onclick=@(()=>{eve = ev; eventclick(ev);})>@ev.Title</div>
                                }
                            }

                        }


                        numberOfDays = 0;
                        increment++;
                        if (IsFirstDay)
                        {
                            EventEndWidth = 0;
                        }
                        DayOfWeek++;
                        if (DayOfWeek > 6)
                        {
                            if (EventStartWidth == 0 && EventEndWidth == 0)
                            {
                            }
                            else
                            {
                                @* !!!!  TO DO: ORDER USING DINAMIC VALUES, background color depends (orange - to approve, green - approved) !!!! *@
                                <div class="appointment" style=" --start: @EventStartWidth; --end: @EventEndWidth; --order: 1; background-color: green;" @onclick=@(()=>{eventclick(eve);})>example</div>
                            }
                        }
                        IsFirstDay = false;
                    }
                </div>
            </div>
        }
    </div>
}

else if (Type == calendar.HorizontalMonth)
{

    <div class="calendar-horizontal-month" style="display:flex">

        <div class="calendar-scroll-x">
            <table class="w-100">
                <thead>
                    <tr>
                        <th style="min-width: 225px;"></th>
                        @foreach (var day in DayData)
                        {
                            <th><div class="@day.Class @(day.IsCurrentDay ? "current-day" : "")">@day.DayNumber</div></th>
                        }
                    </tr>
                </thead>

                <tbody>

                    @Resources
                    @if (Resources == null)
                    {

                        @foreach (var resource in ResourceData)
                        {
                            <tr>
                                <th>
                                    <a href="#" class="resource">
                                        <img src="https://bc3-production-assets-cdn.basecamp-static.com/5210725/people/BAhpBAkkNQI=--b1af44bd5b68f77ba22f8889ed577e6429496da9/avatar?v=1" alt="user"/>
                                        <div class="resource-info">
                                            <p class="resource-name">@resource.Text @resource.Id</p>
                                            <p class="resource-department">função</p>
                                        </div>
                                    </a>
                                </th>

                                @foreach (var day in DayData)
                                {
                                    <td>
                                        <div class="resource-day" @onclick=@(()=>{Op = 2;dayvalue = day.DayNumber; resourcevalue = resource; dayclick();})>
                                            @foreach (var ev in EventData)
                                            {
                                                if (ev.EventResource == resource.Id)
                                                {
                                                    if (ev.StartDate.Day == day.Date.Day && ev.StartDate.Month == day.Date.Month && ev.StartDate.Year == day.Date.Year)
                                                    {
                                                        <div class="appointment" @onclick:stopPropagation="true" @onclick=@(()=>{eve = ev; eventclick(ev);})>ex</div>
                                                    }
                                                }
                                            }
                                        </div>
                                    </td>

                                }

                            </tr>
                        }

                    }

                </tbody>
            </table>
        </div>

        @* old version *@
        @*   <div style="width:100%; display:none">
                <!-- Componente para os recursos -->
                @Resources
                @if (Resources == null)
                {
                    <CalendarResource DataSource="ResourceData"></CalendarResource>
                }

                @{
                    string num = "0px";
                }
                @if (DayData.Count == 30)
                {
                    num = "3000px";
                }
                else if (DayData.Count == 28)
                {
                    num = "2800px";
                }
                else if (DayData.Count == 29)
                {
                    num = "2900px";
                }
                else
                { num = "3100px"; }
                <div style="width:@num" class="calendar-grid">

                    @for (int i = 1; i <= ResourceData.Count; i++)
                    {
                        int numberOfDays = 0, increment = 0;
                        int[] counter = new int[250];
                        int[] identifier = new int[250];
                        List<Event> eventStored = new List<Event>();
                        <div class="grid-line">
                            @for (int j = 1; j <= DayData.Count; j++)
                            {
                                int day, resourse;
                                day = j;
                                resourse = i;
                                var date = new DateTime(CurrentMonthValue.Year, CurrentMonthValue.Month, day);
                                <div class="grid-column" id="@resourse @day" @onclick=@(()=>{Op = 2;dayvalue = day; resourcevalue = resourse; dayclick();})>
                                        Old Event Logic -
                                        @foreach (var ev in EventData)
                                        {
                                            if (ev.EventResource == resourse)
                                            {
                                                if (ev.StartDate.Day == date.Day && ev.StartDate.Month == date.Month && ev.StartDate.Year == date.Year)
                                                {
                                                    <div class="appointment2" @onclick:stopPropagation="true" @onclick=@(()=>{eve = ev; eventclick();})>@ev.Title</div>
                                                }
                                            }
                                        } -
                                    @foreach (var e in eventStored)
                                    {
                                        for (int k = 0; k < 250; k++)
                                        {
                                            if (identifier[k] == e.StartDate.Date.Day && counter[k] > 0 && e.StartDate.Date.Day != j && e.EventResource == i)
                                            {
                                                <div class="appointment2" @onclick:stopPropagation="true" @onclick=@(()=>{eve = e; eventclick();})>@e.Title</div>
                                                counter[k] = counter[k] - 1;
                                            }
                                        }
                                    }
                                    @foreach (var ev in EventData)
                                    {
                                        bool exists = false;
                                        if (ev.StartDate.Date.Day == j && ev.StartDate.Date.Month == CurrentMonthValue.Month && ev.EventResource == i)
                                        {
                                            if (ev.StartDate.Date.Day != ev.EndDate.Date.Day)
                                            {
                                                TimeSpan duration = ev.EndDate - ev.StartDate;
                                                numberOfDays = duration.Days;
                                                if (numberOfDays > 0 && numberOfDays <= 366)
                                                {
                                                    foreach (var e in eventStored)
                                                    {
                                                        if (e.StartDate == ev.StartDate)
                                                        {
                                                            exists = true;
                                                        }
                                                    }
                                                    if (!exists)
                                                    {
                                                        eventStored.Add(ev);
                                                        identifier[increment] = ev.StartDate.Date.Day;
                                                        counter[increment] = numberOfDays;
                                                        <div class="appointment2" @onclick:stopPropagation="true" @onclick=@(()=>{eve = ev; eventclick();})>@ev.Title</div>
                                                    }

                                                }
                                            }
                                            else
                                            {
                                                <div class="appointment2" @onclick:stopPropagation="true" @onclick=@(()=>{eve = ev; eventclick();})>@ev.Title</div>
                                            }
                                        }
                                    }
                                </div>
                                numberOfDays = 0;
                                increment++;
                            }

                        </div>
                    }
                </div>
            </div>
        *@
    </div>
}

else if (Type == calendar.HorizontalYear)
{
    <div class="calendar-horizontal-month" style="display:flex">

        <div class="calendar-scroll-x">
            <table class="w-100">
                <thead>
                    <tr>
                        <th style="min-width: 225px;"></th>
                        @foreach (var month in MonthsList)

                        {
                            @if (month.Contains(CurrentMonthString) && Int32.Parse(YearString) == DateTime.Today.Year)
                            {
                                <th><div class="month current">@month</div></th>
                            }
                            else
                            {
                                <th><div class="month">@month</div></th>
                            }
                        }
                    </tr>
                </thead>

                <tbody>

                    @Resources
                    @if (Resources == null)
                    {

                        @foreach (var resource in ResourceData)
                        {
                            <tr>
                                <th>
                                   <a href="#" class="resource">
                                       <img src="https://bc3-production-assets-cdn.basecamp-static.com/5210725/people/BAhpBAkkNQI=--b1af44bd5b68f77ba22f8889ed577e6429496da9/avatar?v=1" alt="user"/>
                                       <div class="resource-info">
                                           <p class="resource-name">@resource.Text @resource.Id</p>
                                           <p class="resource-department">função</p>
                                       </div>
                                   </a>
                                </th>


                                    @for (int j = 1; j <= MonthsList.Count; j++)
                                    {
                                        int month, Resourse;
                                    ResourceData resourceToPass;
                                    month = j;
                                        Resourse = resource.Id;
                                    resourceToPass = resource;
                                    var date = new DateTime(CurrentMonthValue.Year, month, 1);
                                    <td>
                                            <div class="resource-day" id="@Resourse @month" @onclick=@(() => { Op = 3; monthvalue = month; resourcevalue = resourceToPass; dayclick(); })>
                                                @foreach (var ev in EventData)
                                                {
                                                    if (ev.EventResource == Resourse)
                                                    {
                                                        if (ev.StartDate.Month == date.Month && ev.StartDate.Year == date.Year)
                                                        {
                                                            <div class="appointment" @onclick:stopPropagation="true" @onclick=@(() => { eve = ev; eventclick(ev); })>@ev.Title</div>
                                                        }
                                                    }
                                                }
                                            </div>
                                        </td>

                                    }

                                
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>


        @* old version *@
        @*
            <div class="calendar2 lalalal">

                <div class="days-header">

                    <div class="empty-space"></div>

                    @foreach (var month in MonthsList)
                    {
                        @if (month.Contains(CurrentMonthString) && Int32.Parse(YearString) == DateTime.Today.Year)
                        {
                            <div class="day2 current-day">
                                @month
                            </div>
                        }
                        else
                        {
                            <div class="day2">
                                @month
                            </div>
                        }

                    }

                </div>
                <div style="width:100%">
                    <div class="calendar-resources">
                        <!-- Componente para os recursos -->
                        @Resources
                        @if (Resources == null)
                        {
                            <CalendarResource DataSource="ResourceData"></CalendarResource>
                        }

                    </div>
                    <div style="width:1200px" class="calendar-grid">
                        @for (int i = 1; i <= ResourceData.Count; i++)
                        {
                            <div class="grid-line">
                                @for (int j = 1; j <= MonthsList.Count; j++)
                                {
                                    int month, resourse;
                                    month = j;
                                    resourse = i;
                                    var date = new DateTime(CurrentMonthValue.Year, month, CurrentMonthValue.Day);
                                    <div class="grid-column" id="@resourse @month" @onclick=@(()=>{Op = 3;monthvalue = month; resourcevalue = resourse; dayclick();})>
                                        @foreach (var ev in EventData)
                                        {
                                            if (ev.EventResource == resourse)
                                            {
                                                if (ev.StartDate.Month == date.Month && ev.StartDate.Year == date.Year)
                                                {
                                                    <div class="appointment2" @onclick:stopPropagation="true" @onclick=@(()=>{eve = ev; eventclick(ev);})>@ev.Title</div>
                                                }
                                            }
                                        }
                                    </div>

                                }
                            </div>
                        }
                    </div>
                </div>

            </div>


        *@

    </div>









}

else if (Type == calendar.HorizontalFullYear)
{
    <div class="calendar-horizontal-year" style="display:flex">

        <div class="calendar-scroll-x">
            <table class="w-100">
                <thead>
                    <tr>
                        @{int monthCount = 1; string colspanValue = "0";}
                        <th style="min-width: 225px;"></th>
                        @foreach (var month in MonthsList)
                        {
                            switch (monthCount)
                            {
                                case 1:
                                case 3:
                                case 5:
                                case 7:
                                case 8:
                                case 10:
                                case 12:
                                    colspanValue = "31";
                                    break;
                                case 4:
                                case 6:
                                case 9:
                                case 11:
                                    colspanValue = "30";
                                    break;
                                case 2:
                                if (DateTime.IsLeapYear(int.Parse(YearString)))
                                    {
                                        colspanValue = "29";
                                    }
                                    else { colspanValue = "28"; }
                                    break;
                            }
                            <th colspan="@colspanValue"><div class="month">@month</div></th>
                            monthCount++;
                        }
                    </tr>
                    <tr>
                        <th style="min-width: 225px;"></th>
                        @{
                            var monthcount = 1;
                        }
                        @foreach (var month in MonthData)
                        {
                            for (int k = 1; k <= month.Day.Count; k++)
                            {
                                if (k == DateTime.Today.Day && monthcount == DateTime.Today.Month && Int32.Parse(YearString) == DateTime.Today.Year)
                                {
                                    <th><div class="day current">@k</div></th>
                                }
                                else
                                {
                                    <th><div class="day">@k</div></th>

                                }

                            }
                            monthcount++;
                        }
                    </tr>


                                
               
                </thead>


                <tbody>



                    @Resources
                    @if (Resources == null)
                    {

                        @foreach (var resource in ResourceData)
                        {
                            <tr>
                                <th>
                                    <a href="#" class="resource">
                                        <img src="https://bc3-production-assets-cdn.basecamp-static.com/5210725/people/BAhpBAkkNQI=--b1af44bd5b68f77ba22f8889ed577e6429496da9/avatar?v=1" alt="user"/>
                                        <div class="resource-info">
                                            <p class="resource-name">@resource.Text @resource.Id</p>
                                            <p class="resource-department">função</p>
                                        </div>
                                    </a>
                                </th>

                                
                                    @{var currentmonth = 1;}

                                    @foreach (var month in MonthData)
                                {
                                    int numberOfDays = 0, increment = 0;
                                    int[] counter = new int[250];
                                    int[] identifier = new int[250];
                                    List<Event> eventStored = new List<Event>();
                                    for (int k = 1; k <= month.Day.Count; k++)
                                    {
                                        int day, resourse, gridMonth;
                                        ResourceData resourceToPass;
                                        day = k;
                                        resourse = resource.Id;
                                        resourceToPass = resource;
                                        gridMonth = currentmonth;
                                        var date = new DateTime(CurrentMonthValue.Year, currentmonth, day);
                                        int daysInMonth = DateTime.DaysInMonth(Int32.Parse(YearString), currentmonth);
                                        bool isLastDay = false;
                                        string cssClass = "";
                                        if (isLastDay = day == daysInMonth)
                                        {
                                            cssClass = "last-day";
                                        }
                                            <td class="@cssClass">
                                            <div class="resource-day" id="@resourse @day @gridMonth" @onclick=@(()=>{Op = 4;dayvalue = day; resourcevalue = resourceToPass; gridmonthValue = gridMonth; dayclick();})>

                                                @foreach (var e in eventStored)
                                                {
                                                    for (int j = 0; j < 250; j++)
                                                    {
                                                        if (identifier[j] == e.StartDate.Date.Day && counter[j] > 0 && e.StartDate.Date.Day != k && e.EventResource == resource.Id)
                                                        {
                                                            <div class="appointment" @onclick:stopPropagation="true" @onclick=@(()=>{eve = e; eventclick(e);})>@e.Title</div>
                                                            counter[j] = counter[j] - 1;
                                                        }
                                                    }
                                                }
                                                @foreach (var ev in EventData)
                                                {
                                                    bool exists = false;
                                                    if (ev.StartDate.Date.Day == k && ev.StartDate.Date.Month == currentmonth && ev.EventResource == resource.Id)
                                                    {
                                                        if (ev.StartDate.Date.Day != ev.EndDate.Date.Day)
                                                        {
                                                            TimeSpan duration = ev.EndDate - ev.StartDate;
                                                            numberOfDays = duration.Days;
                                                            if (numberOfDays > 0 && numberOfDays <= 366)
                                                            {
                                                                foreach (var e in eventStored)
                                                                {
                                                                    if (e.StartDate == ev.StartDate)
                                                                    {
                                                                        exists = true;
                                                                    }
                                                                }
                                                                if (!exists)
                                                                {
                                                                    eventStored.Add(ev);
                                                                    identifier[increment] = ev.StartDate.Date.Day;
                                                                    counter[increment] = numberOfDays;
                                                                    <div class="appointment" @onclick:stopPropagation="true" @onclick=@(()=>{eve = ev; eventclick(ev);})>@ev.Title</div>
                                                                }

                                                            }
                                                        }
                                                        else
                                                        {
                                                            <div class="appointment" @onclick:stopPropagation="true" @onclick=@(()=>{eve = ev; eventclick(ev);})>@ev.Title</div>
                                                        }
                                                    }
                                                }
                                            </div>
                                        </td>

                                    }
                                        currentmonth++;
                                }

                            </tr>
                        }
                    }


                </tbody>
            </table>
        </div>
    </div>


    @* old version *@
    @*
        <div class="calendar2">
            <div class="days-header">
                <div class="empty-space"></div>
                @foreach (var month in MonthsList)
                {
                    <div class="months-year">
                        @month
                    </div>
                }
            </div>

            <div class="days-header">

                <div class="empty-space"></div>
                @{
                    var monthcount = 1;
                }
                @foreach (var month in MonthData)
                {
                    for (int k = 1; k <= month.Day.Count; k++)
                    {
                        if (k == DateTime.Today.Day && monthcount == DateTime.Today.Month && Int32.Parse(YearString) == DateTime.Today.Year)
                        {
                            <div class="day2 current-day">
                                @k
                            </div>
                        }
                        else
                        {
                            <div class="day2">
                                @k
                            </div>

                        }

                    }
                    monthcount++;
                }
            </div>
            <div style="width:100%">
                <div class="calendar-resources">
                    <!-- Componente para os recursos -->
                    @Resources
                    @if (Resources == null)
                    {
                        <CalendarResource DataSource="ResourceData"></CalendarResource>
                    }

                </div>

                <div style="width:36500px" class="calendar-grid">
                    @for (int i = 1; i <= ResourceData.Count; i++)
                    {
                        var currentmonth = 1;
                        <div class="grid-line">
                            @foreach (var month in MonthData)
                            {
                                int numberOfDays = 0, increment = 0;
                                int[] counter = new int[250];
                                int[] identifier = new int[250];
                                List<Event> eventStored = new List<Event>();
                                for (int k = 1; k <= month.Day.Count; k++)
                                {
                                    int day, resourse, gridMonth;
                                    day = k;
                                    resourse = i;
                                    gridMonth = currentmonth;
                                    var date = new DateTime(CurrentMonthValue.Year, currentmonth, day);
                                    <div class="grid-column" id="@resourse @day @gridMonth" @onclick=@(()=>{Op = 4;dayvalue = day; resourcevalue = resourse; gridmonthValue = gridMonth; dayclick();})>

                                        @foreach (var e in eventStored)
                                        {
                                            for (int j = 0; j < 250; j++)
                                            {
                                                if (identifier[j] == e.StartDate.Date.Day && counter[j] > 0 && e.StartDate.Date.Day != k && e.EventResource == i)
                                                {
                                                    <div class="appointment2" @onclick:stopPropagation="true" @onclick=@(()=>{eve = e; eventclick(e);})>@e.Title</div>
                                                    counter[j] = counter[j] - 1;
                                                }
                                            }
                                        }
                                        @foreach (var ev in EventData)
                                        {
                                            bool exists = false;
                                            if (ev.StartDate.Date.Day == k && ev.StartDate.Date.Month == currentmonth && ev.EventResource == i)
                                            {
                                                if (ev.StartDate.Date.Day != ev.EndDate.Date.Day)
                                                {
                                                    TimeSpan duration = ev.EndDate - ev.StartDate;
                                                    numberOfDays = duration.Days;
                                                    if (numberOfDays > 0 && numberOfDays <= 366)
                                                    {
                                                        foreach (var e in eventStored)
                                                        {
                                                            if (e.StartDate == ev.StartDate)
                                                            {
                                                                exists = true;
                                                            }
                                                        }
                                                        if (!exists)
                                                        {
                                                            eventStored.Add(ev);
                                                            identifier[increment] = ev.StartDate.Date.Day;
                                                            counter[increment] = numberOfDays;
                                                            <div class="appointment2" @onclick:stopPropagation="true" @onclick=@(()=>{eve = ev; eventclick(ev);})>@ev.Title</div>
                                                        }

                                                    }
                                                }
                                                else
                                                {
                                                    <div class="appointment2" @onclick:stopPropagation="true" @onclick=@(()=>{eve = ev; eventclick(ev);})>@ev.Title</div>
                                                }
                                            }
                                        }
                                    </div>
                                    numberOfDays = 0;
                                    increment++;
                                }
                                currentmonth++;
                            }

                        </div>
                    }
                </div>
            </div>

        </div>
    *@



}

@code {
    [Parameter]
    public calendar Type { get; set; }
    //the list of weeks for the month calendar
    [Parameter]
    public List<Week> WeekData { get; set; }

    //the list of events for all the calendars
    [Parameter]
    public List<Event> EventData { get; set; } = new List<Event>();

    //the method that represents clicking on a specific day (Month.Calendar)
    [Parameter]
    public Action<Day> MonthDayClickMethod { get; set; }

    //the method that represents clicking on a specific day (HorizontalMonth.Calendar)
    [Parameter]
    public Action<ResourceData, int> HorizontalMonthDayClickMethod { get; set; }

    //the method that represents clicking on a specific day (HorizontalYear.Calendar)
    [Parameter]
    public Action<ResourceData, int> HorizontalYearDayClickMethod { get; set; }

    //the method that represents clicking on a specific day (HorizontalFullYear.Calendar)
    [Parameter]
    public Action<ResourceData, int, int> HorizontalFullYearDayClickMethod { get; set; }

    //the method that represents clicking a specific event
    [Parameter]
    public Action<Event> EventClickMethod { get; set; }

    //the string that signifies which calendar body to use

    //the list of days for the horizontal month and horizontal full year calendars
    [Parameter]
    public List<Day> DayData { get; set; }

    //used to optionally input a resource component or a list of resources
    [Parameter]
    public RenderFragment Resources { get; set; }

    //the list of resources for the horizontal calendars
    [Parameter]
    public List<ResourceData> ResourceData { get; set; } = new List<ResourceData>();

    //the datetime value for the current month used in the horizontal calendars
    [Parameter]
    public DateTime CurrentMonthValue { get; set; }

    //the list of months in strings (HorizontalFullYear.Calendar)
    [Parameter]
    public List<String> MonthsList { get; set; }

    //the string value for the current month (HorizontalYear.Calendar)
    [Parameter]
    public string CurrentMonthString { get; set; }

    //the string value for the year (horizontal year/horizontal full year)
    [Parameter]
    public string YearString { get; set; }

    //the list of months for the horizontal full year calendar
    [Parameter]
    public List<Month> MonthData { get; set; }


    private Day dayy;
    private Event eve;
    private ResourceData resourcevalue;
    private int dayvalue;
    private int monthvalue;
    private int gridmonthValue;
    private int Op = 0;

    //method to determine with action to invoke
    private void dayclick()
    {
        if (Op == 1)
        {
            MonthDayClickMethod.Invoke(dayy);
        }
        else if (Op == 2)
        {
            HorizontalMonthDayClickMethod.Invoke(resourcevalue, dayvalue);
        }
        else if (Op == 3)
        {
            HorizontalYearDayClickMethod.Invoke(resourcevalue, monthvalue);
        }
        else if (Op == 4)
        {
            HorizontalFullYearDayClickMethod.Invoke(resourcevalue, dayvalue, gridmonthValue);
        }

    }
    public enum calendar
    {
        Month,
        HorizontalMonth,
        HorizontalYear,
        HorizontalFullYear,
    }

    //method to invoke the eventclickmethod action
    private void eventclick(Event ev)
    {
        EventClickMethod.Invoke(ev);
    }
}
